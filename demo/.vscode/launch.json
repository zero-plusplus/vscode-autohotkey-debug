{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "AutoHotkey Debug",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
            "runtime_v1": "AutoHotkey.exe",
            "runtime_v2": "v2/AutoHotkey64.exe",
            "runtimeArgs": [
                "/CP65001",
                "/ErrorStdOut=UTF-8",
            ],
            "args": [],
            "port": "9002-9010",
            "stopOnEntry": false,
            "useDebugDirective": true,
            "usePerfTips": true,
            "openFileOnExit": "${file}",
            "internalConsoleOptions": "openOnSessionStart",
            "useAutoJumpToError": true,
            "trace": false,
            "useOutputDebug": {
                "useTrailingLinebreak": true
            },
            "useExceptionBreakpoint": true,
            "useAnnounce": "develop",
            "variableCategories": "recommend"
        },
        {
            "name": "Runtime tests in directories registered in environment variables",
            "type": "autohotkey",
            "request": "launch",
            "runtime": "autohotkey",
            "program": "${file}",
            "args": []
        },
        {
            "name": "pinnedFile Test",
            "type": "autohotkey",
            "request": "launch",
            "program": "${command:vscode-autohotkey-debug.variables.pinnedFile}",
            "openFileOnExit": "${command:vscode-autohotkey-debug.variables.pinnedFile}",
            "extends": "AutoHotkey Debug"
        },
        {
            "name": "firstFile Test",
            "type": "autohotkey",
            "request": "launch",
            "program": "${command:vscode-autohotkey-debug.variables.firstFile}",
            "openFileOnExit": "${command:vscode-autohotkey-debug.variables.firstFile}",
            "extends": "AutoHotkey Debug"
        },
        {
            "name": "lastFile Test",
            "type": "autohotkey",
            "request": "launch",
            "program": "${command:vscode-autohotkey-debug.variables.lastFile}",
            "openFileOnExit": "${command:vscode-autohotkey-debug.variables.lastFile}",
            "extends": "AutoHotkey Debug"
        },
        {
            "name": "VariableCategories Test",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
            "runtime_v1": "AutoHotkey.exe",
            "runtime_v2": "v2/AutoHotkey64.exe",
            "args": [],
            "port": "9002-9010",
            "stopOnEntry": false,
            "useDebugDirective": true,
            "usePerfTips": true,
            "openFileOnExit": "${file}",
            "internalConsoleOptions": "openOnSessionStart",
            "useAutoJumpToError": true,
            "trace": false,
            "variableCategories": [
                "Local",
                {
                    "label": "Global",
                    "source": "Global",
                    "noduplicate": true,
                    "matchers": [
                        {
                            "method": "exclude",
                            "pattern": "\\d"
                        },
                    ]
                },
                {
                    "label": "Global Func",
                    "source": "Global",
                    "hidden": "auto",
                    "matchers": [
                        {
                            "method": "exclude",
                            "pattern": "\\d"
                        },
                        {
                            "className": "Func",
                            "builtin": false,
                        },
                    ],
                },
                {
                    "label": "Built-in Func",
                    "source": "Global",
                    "hidden": "auto",
                    "matchers": [
                        {
                            "method": "exclude",
                            "pattern": "\\d"
                        },
                        {
                            "className": "Func",
                            "builtin": true,
                        },
                    ],
                },
                {
                    "label": "Built-in Global",
                    "source": "Global",
                    "matchers": [
                        {
                            "method": "exclude",
                            "pattern": "\\d"
                        },
                        {
                            "method": "exclude",
                            "className": "Func",
                        },
                        {
                            "builtin": true,
                        }
                    ],
                },
                {
                    "label": "Constant",
                    "source": "Global",
                    "matchers": [
                        {
                            "pattern": "^[A-Z_]+$",
                            "ignorecase": false,
                        }
                    ],
                },
                {
                    "label": "All",
                    "source": [ "Local", "Static", "Global" ],
                },
            ],
            "useAnnounce": "detail",
        },
        {
            "name": "setHiddenBreakpoints Test",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
            "useExceptionBreakpoint": true,
            "setHiddenBreakpoints": [
                {
                    "label": "Stop On Entry",
                    "breakpoints": [
                        {
                            "target": "${file}",
                            "line": 1,
                        }
                    ],
                },
                {
                    "label": "Stop On Exit",
                    "breakpoints": [
                        {
                            "target": "${file}",
                            "line": -1,
                        }
                    ],
                },
                {
                    "label": "Stop On Entry/Exit",
                    "breakpoints": [
                        {
                            "target": "${file}",
                            "line": [ 1, -1 ],
                        }
                    ],
                },
                {
                    "label": "Function Trace",
                    "breakpoints": [
                        {
                            "target": "*",
                            "line": 1,
                            "log": "{A_ThisFunc} start"
                        },
                        {
                            "target": "*",
                            "line": -1,
                            "log": "{A_ThisFunc} end",
                        },
                    ]
                },
                {
                    "label": "Global Variable Trace",
                    "breakpoints": [
                        {
                            "target": "${workspaceFolder}/*.*",
                            "line": {
                                "pattern": "^\\s*(global)\\s+(?<var>[a-zA-Z0-9@#$]+)\\s*(?=:=)",
                                "select": "all",
                                "ignoreCase": true,
                                "offset": 1,
                            },
                            "log": "{GetMetaVar(\"$1\")} {GetMetaVar(\"$var\")} := \"{GetVar(GetMetaVar(\"$var\"))}\"",
                        },
                    ]
                }
            ],
        },
        {
            "name": "AutoHotkey Debug (UIA)",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
            "runtime": "AutoHotkeyU64_UIA.exe",
            "args": [],
            "port": "9002-9010",
            "stopOnEntry": false,
            "useDebugDirective": true,
            "usePerfTips": true,
            "openFileOnExit": "${file}",
            "internalConsoleOptions": "openOnSessionStart",
            "useAutoJumpToError": true,
            "useUIAVersion": true,
            "useAnnounce": "detail",
            "trace": false,
        },
        {
            "name": "AutoHotkey_H Debug",
            "request": "launch",
            "type": "autohotkey",
            "runtime_v1": "h/AutoHotkey.exe",
            "runtime_v2": "h/v2/AutoHotkey.exe",
            "program": "${file}",
            "args": [],
            "stopOnEntry": false,
            "maxChildren": 10000,
            "useAnnounce": "detail",
            "variableCategories": "recommend",
        },
        {
            "name": "AutoHotkey Attach",
            "type": "autohotkey",
            "request": "attach",
            "program": "${file}",
            "hostname": "127.0.0.1",
            "useDebugDirective": true,
            "openFileOnExit": "${file}",
            "useAutoJumpToError": true,
            "useAnnounce": "detail",
            "trace": false,
        },
        {
            "name": "Runtime Auto Select",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
        },
        {
            "name": "Runtime Auto Select (ERROR in v2)",
            "type": "autohotkey",
            "request": "launch",
            "runtime_v2": "AutoHotkey.exe",
            "program": "${file}",
        },
        {
            "name": "Runtime Auto Select (Portable)",
            "type": "autohotkey",
            "request": "launch",
            "program": "${file}",
            "runtime": "C:/AutoHotkey", // If you want to test it, copy it from `C:\Program Files\AutoHotkey`.
        },
        {
            "name": "AutoHotkey Selected Attach",
            "type": "autohotkey",
            "request": "attach",
            "hostname": "127.0.0.1",
            "useDebugDirective": true,
            "openFileOnExit": "${file}",
            "useAutoJumpToError": true,
            "useAnnounce": "detail",
            "stopOnEntry": true,
            "trace": false,
        },
    ]
}