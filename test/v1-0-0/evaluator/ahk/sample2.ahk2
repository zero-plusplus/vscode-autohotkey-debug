#SingleInstance
#Warn All, StdOut
#Include ./lib/SafeCall.ahk2

testResults := Map()

predicateDataList := [
  [ "abc" ],
  [ "ABC" ],
  [ "abcABC" ],
  [ "abcABC123" ],
  [ " " ],
  [ "a b" ],
  [ 123 ],
  [ "123" ],
  [ -123 ],
  [ "-123" ],
  [ 123.456 ],
  [ "123.456" ],
  [ -123.456 ],
  [ "-123.456" ],
  [ 0x123, "0x123" ],
  [ "0x123" ],
  [ -0x123, "-0x123" ],
  [ "-0x123" ],
]

; #region Predicate functions
for i, funcName in [ "IsInteger", "IsFloat", "IsNumber", "IsDigit", "IsXDigit", "IsAlpha", "IsAlnum", "IsSpace", "IsUpper", "IsLower" ] {
  for j, dataAndLabel in predicateDataList {
    data := dataAndLabel[1]
    label := dataAndLabel.length == 2 ? dataAndLabel[2] : dataAndLabel[1]

    key := Type(data) == "String" ? funcName . '("' . label . '")' : funcName . '(' . label . ')'
    testResults[key] := SafeCall(() => %funcName%(data))
  }
}
; #endregion Predicate functions

ExitApp